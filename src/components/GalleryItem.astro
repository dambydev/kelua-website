---
import OptimizedImage from './OptimizedImage.astro';

interface Props {
  immagine: string;
  titolo: string;
  descrizione?: string;
  categoria?: string;
  genere?: string;
  class?: string;
}

const {
  immagine,
  titolo,
  descrizione,
  categoria,
  genere,
  class: className = ''
} = Astro.props;

---

<div class={`gallery-item ${className}`}>
  <div class="image-container">
    <OptimizedImage
      src={immagine}
      alt={titolo}
      width={600}
      height={400}
      class="gallery-image"
      loading="lazy"
      sizes="(min-width: 1024px) 400px, (min-width: 768px) 300px, 280px"
    />
    
    <div class="overlay">
      <div class="content">
        <h3 class="title">{titolo}</h3>
        {descrizione && (
          <p class="description">{descrizione}</p>
        )}
        {categoria && (
          <span class="category">{categoria}</span>
        )}
        {genere && (
          <span class="gender">{genere}</span>
        )}
      </div>
    </div>
  </div>
</div>

<style>
  .gallery-item {
    position: relative;
    overflow: hidden;
    border-radius: 12px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    background: #fff;
  }
  
  .gallery-item:hover {
    transform: translateY(-8px);
    box-shadow: 0 8px 40px rgba(0, 0, 0, 0.15);
  }
  
  .image-container {
    position: relative;
    width: 100%;
    height: 300px;
    overflow: hidden;
  }
  
  .gallery-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }
  
  .gallery-item:hover .gallery-image {
    transform: scale(1.05);
  }
  
  .overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
      to bottom,
      rgba(0, 0, 0, 0) 0%,
      rgba(0, 0, 0, 0.3) 50%,
      rgba(0, 0, 0, 0.8) 100%
    );
    display: flex;
    align-items: flex-end;
    padding: 20px;
    opacity: 0;
    transition: opacity 0.3s ease;
  }
  
  .gallery-item:hover .overlay {
    opacity: 1;
  }
  
  .content {
    color: white;
    width: 100%;
  }
  
  .title {
    font-size: 1.2rem;
    font-weight: 600;
    margin: 0 0 8px 0;
    line-height: 1.3;
  }
  
  .description {
    font-size: 0.9rem;
    margin: 0 0 12px 0;
    line-height: 1.4;
    opacity: 0.9;
  }
  
  .category,
  .gender {
    display: inline-block;
    background: rgba(255, 255, 255, 0.2);
    backdrop-filter: blur(4px);
    padding: 4px 8px;
    border-radius: 6px;
    font-size: 0.8rem;
    margin-right: 8px;
    border: 1px solid rgba(255, 255, 255, 0.3);
  }
  
  .category {
    background: rgba(59, 130, 246, 0.3);
  }
  
  .gender {
    background: rgba(236, 72, 153, 0.3);
  }
  
  /* Responsive design */
  @media (max-width: 768px) {
    .image-container {
      height: 250px;
    }
    
    .overlay {
      padding: 16px;
    }
    
    .title {
      font-size: 1.1rem;
    }
    
    .description {
      font-size: 0.85rem;
    }
  }
</style>
