---
import { getCollection } from 'astro:content';

const collections = await getCollection('collezioni');
---

<!-- Kelua Hero Section with Sticky Slider Nav -->
<section class="kelua-hero-tabs">
  <div class="logo-section">
    <a href="/" class="logo-link">
      <img src="/logoKeluaNoBG.png" alt="Kelua" class="hero-logo">
    </a>
  </div>
  
  <!-- Sticky Navigation Container -->
  <div class="kelua-hero-tabs-container">
    <a class="kelua-hero-tab" href="/">Home</a>
    <a class="kelua-hero-tab" href="/collezioni">Collezioni</a>
    <a class="kelua-hero-tab" href="/saldi">Saldi</a>
    <a class="kelua-hero-tab" href="/#contatti">Contatti</a>
    <a class="kelua-hero-tab" href="https://kelua.netlify.app/admin/" target="_blank">Area Personale</a>
    <span class="kelua-hero-tab-slider"></span>
  </div>
</section>

<!-- Mobile Menu Button (visible only on mobile) -->
<button class="mobile-menu-toggle" id="mobileMenuToggle">
  <span></span>
  <span></span>
  <span></span>
</button>

<!-- Mobile Menu Overlay -->
<div class="mobile-menu-overlay" id="mobileMenuOverlay">
  <div class="mobile-menu">
    <div class="mobile-menu-header">
      <span class="mobile-menu-title">Menu</span>
      <button class="mobile-menu-close" id="mobileMenuClose">Ã—</button>
    </div>
    <div class="mobile-menu-content">
      <a href="/" class="mobile-nav-item">Home</a>
      <a href="/collezioni" class="mobile-nav-item">Collezioni</a>
      {collections.map(collection => (
        <a href={`/collezioni/${collection.slug}`} class="mobile-nav-item mobile-nav-subcategory">
          {collection.data.title}
        </a>
      ))}
      <a href="/saldi" class="mobile-nav-item">Saldi</a>
      <a href="/#contatti" class="mobile-nav-item">Contatti</a>
      <a href="https://kelua.netlify.app/admin/" class="mobile-nav-item" target="_blank">Area Personale</a>
    </div>
  </div>
</div>

<style>
/* Kelua Sticky Slider Navigation */
.kelua-hero-tabs {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  height: 100px;
  position: relative;
  background: #000000;
  text-align: center;
  padding: 5px 2em;
  margin: 0;
}

.logo-section {
  display: flex;
  flex-direction: column;
  align-items: center;
  flex: 1;
  justify-content: center;
  margin: 0;
}

.logo-link {
  display: inline-block;
  text-decoration: none;
  margin: 0;
}

.hero-logo {
  height: 98px !important;
  width: auto;
  max-width: 400px;
  object-fit: contain;
  filter: brightness(1.2) sepia(1) hue-rotate(35deg) saturate(1.5);
  transition: transform 0.3s ease;
  margin: 0;
}

.hero-logo:hover,
.logo-link:hover .hero-logo {
  transform: scale(1.05);
}

/* Sticky Navigation Container */
.kelua-hero-tabs-container {
  display: flex;
  flex-direction: row;
  position: absolute;
  bottom: 0;
  width: 100%;
  height: 40px;
  box-shadow: 0 -5px 30px rgba(0, 0, 0, 0.8);
  background: rgba(0, 0, 0, 0.95);
  backdrop-filter: blur(10px);
  z-index: 1000;
  border-top: 1px solid rgba(212, 175, 55, 0.3);
  margin: 0;
}

.kelua-hero-tabs-container--top {
  position: fixed !important;
  top: 0 !important;
  bottom: auto !important;
  border-top: none;
  border-bottom: 1px solid rgba(212, 175, 55, 0.3);
  box-shadow: 0 5px 30px rgba(0, 0, 0, 0.8);
}

.kelua-hero-tab {
  display: flex;
  justify-content: center;
  align-items: center;
  flex: 1;
  color: rgba(255, 255, 255, 0.9);
  letter-spacing: 0.1rem;
  text-transform: uppercase;
  transition: all 0.4s ease;
  font-size: 0.9rem;
  font-weight: 400;
  text-decoration: none;
  position: relative;
}

.kelua-hero-tab:hover {
  color: #d4af37;
  background: rgba(212, 175, 55, 0.1);
  transition: all 0.4s ease;
}

.kelua-hero-tab.active {
  color: #d4af37;
  font-weight: 500;
}

.kelua-hero-tab-slider {
  position: absolute;
  bottom: 0;
  width: 0;
  height: 4px;
  background: linear-gradient(90deg, #d4af37, #f4d03f);
  transition: all 0.4s ease;
  box-shadow: 0 0 10px rgba(212, 175, 55, 0.6);
}

/* Mobile Menu Toggle */
.mobile-menu-toggle {
  display: none;
  position: fixed;
  top: 25px;
  right: 25px;
  z-index: 10001;
  background: none;
  border: none;
  cursor: pointer;
  flex-direction: column;
  gap: 4px;
  padding: 10px;
}

.mobile-menu-toggle span {
  width: 25px;
  height: 3px;
  background: #d4af37;
  transition: all 0.3s ease;
}

.mobile-menu-toggle.active span:nth-child(1) {
  transform: rotate(45deg) translate(8px, 8px);
}

.mobile-menu-toggle.active span:nth-child(2) {
  opacity: 0;
}

.mobile-menu-toggle.active span:nth-child(3) {
  transform: rotate(-45deg) translate(8px, -8px);
}

/* Mobile Menu */
.mobile-menu-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.95);
  z-index: 10000;
  opacity: 0;
  visibility: hidden;
  transition: all 0.3s ease;
}

.mobile-menu-overlay.active {
  opacity: 1;
  visibility: visible;
}

.mobile-menu {
  position: absolute;
  top: 0;
  right: 0;
  width: 320px;
  height: 100vh;
  background: rgba(0, 0, 0, 0.98);
  transform: translateX(100%);
  transition: transform 0.3s ease;
  overflow-y: auto;
  border-left: 1px solid rgba(212, 175, 55, 0.3);
}

.mobile-menu-overlay.active .mobile-menu {
  transform: translateX(0);
}

.mobile-menu-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 25px;
  border-bottom: 1px solid rgba(212, 175, 55, 0.3);
  background: rgba(212, 175, 55, 0.1);
}

.mobile-menu-title {
  font-size: 16px;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 2px;
  color: #d4af37;
}

.mobile-menu-close {
  background: none;
  border: none;
  cursor: pointer;
  color: rgba(255, 255, 255, 0.8);
  font-size: 24px;
  padding: 8px;
  border-radius: 4px;
  transition: all 0.3s ease;
  line-height: 1;
}

.mobile-menu-close:hover {
  color: #d4af37;
  background: rgba(212, 175, 55, 0.1);
}

.mobile-menu-content {
  padding: 20px 0;
}

.mobile-nav-item {
  display: block;
  padding: 15px 25px;
  color: rgba(255, 255, 255, 0.9);
  text-decoration: none;
  font-size: 13px;
  text-transform: uppercase;
  letter-spacing: 1.5px;
  border-bottom: 1px solid rgba(255, 255, 255, 0.05);
  transition: all 0.3s ease;
  font-weight: 400;
}

.mobile-nav-item:hover {
  background: rgba(212, 175, 55, 0.15);
  color: #d4af37;
  padding-left: 35px;
}

.mobile-nav-subcategory {
  padding-left: 45px;
  font-size: 11px;
  color: rgba(255, 255, 255, 0.7);
  font-weight: 300;
}

/* Responsive Design */
@media (max-width: 768px) {
  .kelua-hero-tabs {
    height: 70px;
    padding: 3px 1em;
  }
  
  .hero-logo {
    height: 40px;
  }
  
  .kelua-hero-tabs-container {
    display: none;
  }
  
  .mobile-menu-toggle {
    display: flex;
  }
}

@media (min-width: 769px) {
  .mobile-menu-toggle {
    display: none;
  }
  
  .kelua-hero-tabs-container {
    display: flex;
  }
}

@media (min-width: 1200px) {
  .kelua-hero-tab {
    font-size: 1rem;
  }
  
  .kelua-hero-tabs {
    height: 120px;
  }
  
  .hero-logo {
    height: 70px;
  }
}
</style>

<script>
// Kelua Sticky Slider Navigation
class KeluaStickyNavigation {
  constructor() {
    this.currentId = null;
    this.currentTab = null;
    this.tabContainerHeight = 40;
    this.init();
  }
  
  init() {
    this.bindEvents();
    this.setActiveTab();
    this.setSliderCss();
  }
  
  bindEvents() {
    // Navigation clicks
    document.querySelectorAll('.kelua-hero-tab').forEach(tab => {
      tab.addEventListener('click', (e) => this.onTabClick(e, tab));
    });
    
    // Scroll events
    window.addEventListener('scroll', () => this.onScroll());
    window.addEventListener('resize', () => this.onResize());
    
    // Mobile menu events
    const mobileToggle = document.getElementById('mobileMenuToggle');
    const mobileOverlay = document.getElementById('mobileMenuOverlay');
    const mobileClose = document.getElementById('mobileMenuClose');
    
    if (mobileToggle && mobileOverlay) {
      mobileToggle.addEventListener('click', () => this.toggleMobileMenu());
      mobileClose.addEventListener('click', () => this.closeMobileMenu());
      mobileOverlay.addEventListener('click', (e) => {
        if (e.target === mobileOverlay) this.closeMobileMenu();
      });
    }
  }
  
  onTabClick(event, element) {
    event.preventDefault();
    const href = element.getAttribute('href');
    
    // For external pages or different pages, navigate normally
    if (href !== '/' && !href.startsWith('#')) {
      window.location.href = href;
      return;
    }
    
    // For home page
    if (href === '/') {
      // If we're not on the home page, navigate to home
      if (window.location.pathname !== '/') {
        window.location.href = '/';
        return;
      }
      // If we're already on home page, scroll to top
      window.scrollTo({ top: 0, behavior: 'smooth' });
    }
    
    // For anchor links, smooth scroll to section
    if (href.startsWith('#')) {
      const targetId = href.substring(1);
      const targetElement = document.getElementById(targetId);
      if (targetElement) {
        targetElement.scrollIntoView({ behavior: 'smooth' });
      }
    }
    
    this.setActiveTab(element);
    this.setSliderCss();
  }
  
  onScroll() {
    this.checkTabContainerPosition();
  }
  
  onResize() {
    if (this.currentTab) {
      this.setSliderCss();
    }
  }
  
  checkTabContainerPosition() {
    const heroSection = document.querySelector('.kelua-hero-tabs');
    const tabContainer = document.querySelector('.kelua-hero-tabs-container');
    
    if (!heroSection || !tabContainer) return;
    
    const offset = heroSection.offsetTop + heroSection.offsetHeight - this.tabContainerHeight;
    
    if (window.pageYOffset > offset) {
      tabContainer.classList.add('kelua-hero-tabs-container--top');
    } else {
      tabContainer.classList.remove('kelua-hero-tabs-container--top');
    }
  }
  
  setActiveTab(activeTab = null) {
    // Remove active class from all tabs
    document.querySelectorAll('.kelua-hero-tab').forEach(tab => {
      tab.classList.remove('active');
    });
    
    // Set active tab based on current page
    if (!activeTab) {
      const currentPath = window.location.pathname;
      const tabs = document.querySelectorAll('.kelua-hero-tab');
      
      tabs.forEach(tab => {
        const href = tab.getAttribute('href');
        if (href === currentPath || (currentPath === '/' && href === '/')) {
          activeTab = tab;
        }
      });
      
      // Fallback to home if no match
      if (!activeTab) {
        activeTab = document.querySelector('.kelua-hero-tab[href="/"]');
      }
    }
    
    if (activeTab) {
      activeTab.classList.add('active');
      this.currentTab = activeTab;
    }
  }
  
  setSliderCss() {
    const slider = document.querySelector('.kelua-hero-tab-slider');
    if (!slider || !this.currentTab) return;
    
    const tabContainer = document.querySelector('.kelua-hero-tabs-container');
    if (!tabContainer) return;
    
    const tabRect = this.currentTab.getBoundingClientRect();
    const containerRect = tabContainer.getBoundingClientRect();
    
    const width = tabRect.width;
    const left = tabRect.left - containerRect.left;
    
    slider.style.width = `${width}px`;
    slider.style.left = `${left}px`;
  }
  
  toggleMobileMenu() {
    const overlay = document.getElementById('mobileMenuOverlay');
    const toggle = document.getElementById('mobileMenuToggle');
    
    if (overlay && toggle) {
      overlay.classList.toggle('active');
      toggle.classList.toggle('active');
    }
  }
  
  closeMobileMenu() {
    const overlay = document.getElementById('mobileMenuOverlay');
    const toggle = document.getElementById('mobileMenuToggle');
    
    if (overlay && toggle) {
      overlay.classList.remove('active');
      toggle.classList.remove('active');
    }
  }
}

// Initialize when DOM is ready
document.addEventListener('DOMContentLoaded', () => {
  new KeluaStickyNavigation();
});
</script>
